legend.position = "bottom",
legend.direction = "horizontal",
plot.title.position = "plot",
axis.text=element_text(size=18),
plot.title = element_text(color="red", size=20, hjust = 0.5),
legend.text = element_text(size = 18))
data_onepro <- data_covid %>%
select(position,`45_day`, tools_ei, hv_ei, skip_covid_ei, enrolled_ifsp_ei)
tools <- data_onepro %>%
select(tools_ei) %>%
drop_na() %>% #47
group_by(tools_ei) %>%
count() %>%
rename("response" = "tools_ei",
"Using parent-administered\n tool only" = "n")
Met_in_person <- data_onepro %>%
select(hv_ei) %>%
drop_na() %>% #47
group_by(hv_ei) %>%
count() %>%
rename("response" = "hv_ei",
"Met children in person or made\n homevisits" = "n")
timeline <- data_onepro %>%
select(`45_day`) %>%
drop_na() %>%        #41
group_by(`45_day`) %>%
count() %>%
rename("response" = "45_day",
"Following 45-day timeline" = "n")
skip <- data_onepro %>%
select(skip_covid_ei) %>%
drop_na() %>%         #38
group_by(skip_covid_ei) %>%
count() %>%
rename("response" = skip_covid_ei,
"Skipped evaluation for children\n with written documentation" = "n")
enrolled <- data_onepro %>%
select(enrolled_ifsp_ei) %>%
drop_na() %>%  #38
group_by(enrolled_ifsp_ei) %>%
count() %>%
rename("response" = "enrolled_ifsp_ei",
"Enrolled children with interim \nIFSP" = "n")
covid_only_ei <- left_join(tools, Met_in_person, by = c("response"))
covid_only_ei <- left_join(covid_only_ei, timeline, by = c("response"))
covid_only_ei <- left_join(covid_only_ei, skip, by = c("response"))
covid_only_ei <- left_join(covid_only_ei, enrolled, by = c("response"))
covid_only_ei <- covid_only_ei %>%
pivot_longer(cols = c("Using parent-administered\n tool only",
"Met children in person or made\n homevisits",
"Following 45-day timeline",
"Skipped evaluation for children\n with written documentation",
"Enrolled children with interim \nIFSP"),
names_to = "during_pandemic",
values_to = "count") %>%
mutate(percent = round((count/47)*100, digits = 0))
# for the diverging plot
covid_only_ei <- covid_only_ei %>%
mutate(percent = ifelse(response == "Yes",
percent,
-1*percent))
ggplot(covid_only_ei,
aes(x = percent, y = fct_reorder(during_pandemic, percent), fill = response)) +
geom_bar(aes(fill = response), stat = "identity", position = "identity", width = 0.4) +
geom_vline(xintercept = 0, color = "red", linetype = "dashed") +
colorblindr::scale_fill_OkabeIto(name = "response") +
scale_x_continuous(breaks = pretty(covid_only_ei$percent),
labels = paste0(abs(pretty(covid_only_ei$percent)), "%")) +
geom_text(aes(x = percent/2, y = during_pandemic, label = paste0(abs(covid_only_ei$percent), "%")), color = "red",
size = 5) +
#facet_wrap(~position) +
theme_xaringan_inverse() +
ggtitle("Part C EI/ECSE Eligiblity Evaluation during Covid-19 Pandemic: Response by EI/ECSE Professionals") +
theme(axis.title = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
plot.title.position = "plot",
axis.text=element_text(size=18),
plot.title = element_text(color="red", size=20, hjust = 0.5),
legend.text = element_text(size = 18))
valueBox(0.64,
icon = "fas fa-thumbs-up")
valueBox(76,
icon = "ion-person-stalker")
### Questions
data%>%
select(15:18) %>%
drop_na() %>%
pivot_longer(cols = ends_with("_both"),
names_to = "Questions",
values_to = "Response") %>%
group_by(Questions) %>%
count() %>%
mutate("Questions" = recode(Questions,
"detail_help_both" = "Q: In your opinion, would a more detailed and comprehensive list of medical conditions help to decide when EI eligibility evaluations can be skipped and direct referral be made for EI assessment?",
"detail_need_both" = "Q: In your opinion, is having a more detailed and comprehensive medical conditions list for EI eligibility determination in Oregon needed?",
"detail_covid_both" = "Q: In your opinion, a more detailed and comprehensive medical conditions list would have been helpful during Covid-19?",
"info_adequate_both" = "Q: Do you think that information on medical conditions listed in the Oregon State Plan policy guidance is adequate for deciding to carry out an EI eligibility evaluation?")) %>%
rename("N" = "n") %>%
kableExtra::kable() %>%
kable_styling(full_width = TRUE) %>%
column_spec(1, width = "15cm", background = "#F0FFFF" )
data_rec_overall <- data %>%
select(info_adequate_both, detail_need_both, detail_help_both, detail_covid_both) %>%
drop_na()
rec1 <- data_rec_overall %>%
select(info_adequate_both) %>%
group_by(info_adequate_both) %>%
count(info_adequate_both) %>%
rename("response" = "info_adequate_both",
"Adequate information\n is given" = "n")
rec2 <- data_rec_overall %>%
select(detail_need_both) %>%
group_by(detail_need_both) %>%
count(detail_need_both) %>%
rename("response" = "detail_need_both",
"Detailed list\nis needed" = "n")
rec3 <- data_rec_overall %>%
select(detail_help_both) %>%
group_by(detail_help_both) %>%
count(detail_help_both) %>%
rename("response" = "detail_help_both",
"Detailed list\n would be helpful" = "n")
rec4 <- data_rec_overall %>%
select(detail_covid_both) %>%
group_by(detail_covid_both) %>%
count(detail_covid_both) %>%
rename("response" = "detail_covid_both",
"Detailed list during\n Covid-19 is needed" = "n")
rec_overall <- left_join(rec1, rec2, by = "response")
rec_overall <- left_join(rec_overall, rec3, by = "response")
rec_overall <- left_join(rec_overall, rec4, by = "response")
rec_overall <- rec_overall %>%
pivot_longer(cols = -response,
names_to = "information",
values_to = "count") %>%
mutate(percent = round((count/76)*100, digits = 0))
# for the diverging plot
rec_overall <- rec_overall %>%
mutate(percent = ifelse(response == "Yes",
percent,
-1*percent))
ggplot(rec_overall,
aes(x = percent, y = fct_reorder(information, percent), fill = response)) +
geom_bar(aes(fill = response), stat = "identity", position = "identity", width = 0.4) +
geom_vline(xintercept = 0, color = "red", linetype = "dashed") +
colorblindr::scale_fill_OkabeIto(name = "response") +
scale_x_continuous(breaks = pretty(rec_overall$percent),
labels = paste0(abs(pretty(rec_overall$percent)), "%")) +
geom_text(aes(x = percent/2, y = information, label = paste0(abs(rec_overall$percent), "%")), color = "red",
size = 5) +
theme_xaringan_inverse() +
ggtitle("Views on Listed Medical Conditions for Part C EI/ECSE Services") +
theme(axis.title = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
plot.title.position = "plot",
axis.text=element_text(size=18),
plot.title = element_text(color="red", size=20, hjust = 0.5),
legend.text = element_text(size = 18))
data_rec <- data %>%
select(position, info_adequate_both, detail_need_both, detail_help_both, detail_covid_both) %>%
drop_na()
pos_rec1 <- data_rec %>%
select(position, info_adequate_both) %>%
group_by(position, info_adequate_both) %>%
count(info_adequate_both) %>%
rename("response" = "info_adequate_both",
"Adequate information\n is given ?" = "n")
pos_rec2 <- data_rec %>%
select(position, detail_need_both) %>%
group_by(position, detail_need_both) %>%
count(detail_need_both) %>%
rename("response" = "detail_need_both",
"Detailed list\nis needed ?" = "n")
pos_rec3 <- data_rec %>%
select(position, detail_help_both) %>%
group_by(position, detail_help_both) %>%
count(detail_help_both) %>%
rename("response" = "detail_help_both",
"Detailed list\n would be helpful ?" = "n")
pos_rec4 <- data_rec %>%
select(position, detail_covid_both) %>%
group_by(position, detail_covid_both) %>%
count(detail_covid_both) %>%
rename("response" = "detail_covid_both",
"Detailed list during\n Covid-19 is needed ?" = "n")
data_reccomended <- left_join(pos_rec1, pos_rec2, by = c("position", "response"))
data_reccomended <- left_join(data_reccomended, pos_rec3, by = c("position", "response"))
data_reccomended <- left_join(data_reccomended, pos_rec4, by = c("position", "response"))
data_reccomended <- data_reccomended %>%
pivot_longer(cols = -c(position, response),
names_to = "information",
values_to = "count") %>%
mutate(percent = round((count/90)*100, digits = 0))
# for the diverging plot
data_reccomended <- data_reccomended %>%
mutate(percent = ifelse(response == "Yes",
percent,
-1*percent))
ggplot(data_reccomended,
aes(x = percent, y = fct_reorder(information, percent), fill = response)) +
geom_bar(aes(fill = response), stat = "identity", position = "identity", width = 0.4) +
facet_wrap(~position) +
geom_vline(xintercept = 0, color = "red", linetype = "dashed") +
colorblindr::scale_fill_OkabeIto(name = "response") +
scale_x_continuous(breaks = pretty(data_reccomended$percent),
labels = paste0(abs(pretty(data_reccomended$percent)), "%")) +
geom_text(aes(x = percent/2, y = information, label = paste0(abs(data_reccomended$percent), "%")), color = "red",
size = 5) +
theme_xaringan_inverse() +
ggtitle("Views on Listed Medical Conditions for Part C EI/ECSE Services by Profession") +
theme(axis.title = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
plot.title.position = "plot",
axis.text=element_text(size=18),
plot.title = element_text(color="red", size=20, hjust = 0.5),
legend.text = element_text(size = 18),
strip.background = element_blank(),
strip.text = element_text(face="bold", size = 18, color = "yellow", hjust = 0.5))
View(data)
View(data)
data%>%
select(10:14) %>%
pivot_longer(cols = ends_with("_both"),
names_to = "Questions",
values_to = "Response") %>%
group_by(Questions)
data%>%
select(10:14) %>%
pivot_longer(cols = ends_with("_both"),
names_to = "Questions",
values_to = "Response") %>%
group_by(Questions) %>%
count() %>%
mutate("Questions" = recode(Questions,
"skipped_elig_both" = "Q: Have you ever referred a child directly for IFSP development based on a diagnosed medical condition, without doing the preliminary step of eligibility evaluation?",
"delay_elig_both" = "Q: Have you ever experienced a delay in the EI eligibility determination process due to a lack of information or clarity on a child’s medical condition?",
"difficulty_access_both" = "Q3:  [7. Have you come across children with a diagnosed medical condition who could not access EI eligibility evaluation and other services on time?",
"Have you ever asked another professional for information on medical conditions to help evaluate a child’s EI eligibility?",
"searched_medcond_both" = "Have you ever searched for information on medical conditions to make EI eligibility determination?")) %>%
rename("N" = "n") %>%
kableExtra::kable() %>%
kable_styling(full_width = TRUE) %>%
column_spec(1, width = "20cm", background = "#F0FFFF" )
data%>%
select(10:14) %>%
pivot_longer(cols = ends_with("_both"),
names_to = "Questions",
values_to = "Response") %>%
group_by(Questions) %>%
count() %>%
mutate("Questions" = recode(Questions,
"skipped_elig_both" = "Q: Have you ever referred a child directly for IFSP development based on a diagnosed medical condition, without doing the preliminary step of eligibility evaluation?",
"delay_elig_both" = "Q: Have you ever experienced a delay in the EI eligibility determination process due to a lack of information or clarity on a child’s medical condition?",
"difficulty_access_both" = "Q: Have you come across children with a diagnosed medical condition who could not access EI eligibility evaluation and other services on time?",
"help_colleague_both" = "Have you ever asked another professional for information on medical conditions to help evaluate a child’s EI eligibility?",
"searched_medcond_both" = "Q: Have you ever searched for information on medical conditions to make EI eligibility determination?")) %>%
rename("N" = "n") %>%
kableExtra::kable() %>%
kable_styling(full_width = TRUE) %>%
column_spec(1, width = "20cm", background = "#F0FFFF" )
prac_1_all <- data %>%
select(skipped_elig_both) %>%
group_by(skipped_elig_both) %>%
count() %>%
rename("Skippled EI Eligiblity Eval" = n,
"response" = "skipped_elig_both" )
prac_2_all <- data%>%
select(delay_elig_both) %>%
group_by(delay_elig_both) %>%
count() %>%
rename("Delay in EI Eligibility Eval" = n,
"response" = "delay_elig_both")
prac_3_all <- data%>%
select(difficulty_access_both) %>%
group_by(difficulty_access_both) %>%
count() %>%
rename("Difficulty access services" = n,
"response" = "difficulty_access_both")
prac_4_all <- data %>%
select(help_colleague_both) %>%
group_by(help_colleague_both) %>%
count() %>%
rename("Ask for help from colleague" = n,
"response" = "help_colleague_both")
prac_5_all <- data %>%
select(searched_medcond_both) %>%
group_by(searched_medcond_both) %>%
count() %>%
rename("Searched for eligible medical conditions" = n,
"response" = "searched_medcond_both")
practice_data <- left_join(prac_1_all, prac_2_all, by = "response")
practice_data <- left_join(practice_data, prac_3_all, by =  "response")
practice_data <- left_join(practice_data, prac_4_all, by = "response")
practice_data <- left_join(practice_data, prac_5_all, by="response")
practice_data <- practice_data %>%
pivot_longer(cols = -c("response"),
names_to = "practice",
values_to = "count") %>%
mutate(percent = round((count/90)*100, digits = 0))
# for the diverging plot
practice_data <- practice_data %>%
mutate(percent = ifelse(response == "Yes",
percent,
-1*percent))
#Plot AWareness: By Profession
ggplot(practice_data,
aes(x = percent, y = fct_reorder(practice, percent), fill = response)) +
geom_bar(aes(fill = response), stat = "identity", position = "identity", width = 0.4) +
geom_vline(xintercept = 0, color = "red", linetype = "dashed") +
colorblindr::scale_fill_OkabeIto(name = "response") +
scale_x_continuous(breaks = pretty(practice_data$percent),
labels = paste0(abs(pretty(practice_data$percent)), "%")) +
geom_text(aes(x = percent/2, y = practice, label = paste0(abs(practice_data$percent), "%")), color = "red",
size = 5) +
theme_xaringan() +
ggtitle("Use of Listed Medical Conditions in Practice") +
theme(axis.title = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
plot.title.position = "plot",
axis.text=element_text(size=18),
plot.title = element_text(color="red", size=20, hjust = 0.5),
legend.text = element_text(size = 18)) +
guides(fill = guide_legend(reverse = FALSE))
library(psych)
d <- data %>%
select(10:14)
helperFunction <- function(x){
ifelse(x=="Yes", 1,0)
}
d %>%
mutate_all(helperFunction) %>%
data.frame() %>%
psych::alpha()
View(practice_data)
View(practice_data_pro)
practice_data_pro%>%
select(position, response, practice, count) %>%
filter(practice == "Skippled EI Eligiblity Eval") %>%
select(role, response, count)
practice_data_pro%>%
select(position, response, practice, count) %>%
filter(practice == "Skippled EI Eligiblity Eval") %>%
select(position, response, count)
practice_data_pro%>%
select(position, response, practice, count) %>%
filter(practice == "Skippled EI Eligiblity Eval") %>%
select(position, response, count)
practice_fish <- xtabs(count~response+position, data = practice_data_pro)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_data_pro)
practice_data_pro%>%
select(position, response, practice, count) %>%
filter(practice == "Skippled EI Eligiblity Eval") %>%
select(position, response, count)
practice_fish <- xtabs(count~response+position, data = practice_data_pro)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_fish)
print(fisher.result$p.value)
practice_data_pro%>%
select(job_status, response, practice, count) %>%
filter(practice == "Skippled EI Eligiblity Eval") %>%
select(position, response, count)
View(practice_data_job)
practice_data_job %>%
select(job_status, response, practice, count) %>%
filter(practice == "Skippled EI Eligiblity Eval") %>%
select(position, response, count)
practice_data_job %>%
select(job_status, response, practice, count) %>%
filter(practice == "Skippled EI Eligiblity Eval") %>%
select(job_status, response, count)
practice_fish <- xtabs(count~response+job_status, data = practice_data_pro)
practice_data_job %>%
select(job_status, response, practice, count) %>%
filter(practice == "Skippled EI Eligiblity Eval") %>%
select(job_status, response, count)
practice_fish <- xtabs(count~response+job_status, data = practice_data_job)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_fish)
print(fisher.result$p.value)
View(practice_data_service)
practice_data_service %>%
select(years_service, response, practice, count) %>%
filter(practice == "Skippled EI Eligiblity Eval") %>%
select(years_service, response, count)
practice_fish <- xtabs(count~response+years_service, data = practice_data_service)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_fish)
print(fisher.result$p.value)
View(practice_data_role)
practice_data_role %>%
select(role, response, practice, count) %>%
filter(practice == "Skippled EI Eligiblity Eval") %>%
select(role, response, count)
practice_fish <- xtabs(count~response+role, data = practice_data_role)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_fish)
print(fisher.result$p.value)
practice_data_role %>%
select(role, response, practice, count) %>%
filter(practice == "Delay in EI Eligibility Eval") %>%
select(role, response, count)
practice_fish <- xtabs(count~response+role, data = practice_data_role)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_fish)
print(fisher.result$p.value)
practice_data_role %>%
select(role, response, practice, count) %>%
filter(practice == "Difficulty access services") %>%
select(role, response, count)
practice_fish <- xtabs(count~response+role, data = practice_data_role)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_fish)
print(fisher.result$p.value)
practice_data_role %>%
select(role, response, practice, count) %>%
filter(practice == "Difficulty access services") %>%
select(role, response, count)
practice_fish <- xtabs(count~response+role, data = practice_data_role)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_fish)
print(fisher.result$p.value)
practice_data_role %>%
select(role, response, practice, count) %>%
filter(practice == "Ask for help from colleague") %>%
select(role, response, count)
practice_fish <- xtabs(count~response+role, data = practice_data_role)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_fish)
print(fisher.result$p.value)
practice_data_role %>%
select(role, response, practice, count) %>%
filter(practice == "Searched for eligible  medical conditions") %>%
select(role, response, count)
practice_fish <- xtabs(count~response+role, data = practice_data_role)
practice_data_service %>%
select(years_service, response, practice, count) %>%
filter(practice == "Delay in EI Eligibility Eval") %>%
select(years_service, response, count)
practice_fish <- xtabs(count~response+role, data = practice_data_service)
practice_data_service %>%
select(years_service, response, practice, count) %>%
filter(practice == "Delay in EI Eligibility Eval") %>%
select(years_service, response, count)
practice_fish <- xtabs(count~response+years_service, data = practice_data_service)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_fish)
print(fisher.result$p.value)
practice_data_service %>%
select(years_service, response, practice, count) %>%
filter(practice == "Difficulty access services") %>%
select(years_service, response, count)
practice_fish <- xtabs(count~response+years_service, data = practice_data_service)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_fish)
print(fisher.result$p.value)
practice_data_service %>%
select(years_service, response, practice, count) %>%
filter(practice == "Searched for eligible  medical conditions") %>%
select(years_service, response, count)
practice_fish <- xtabs(count~response+years_service, data = practice_data_service)
# Chi square test
#chi.result <- chisq.test(job_fish_df)
#print(chi.result$p.value)
# fisher text
fisher.result <- fisher.test(practice_fish)
print(fisher.result$p.value)
